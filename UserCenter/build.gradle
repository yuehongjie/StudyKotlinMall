if (userCenterAsLibrary.toBoolean()) {  // 模块做为库文件使用
    apply plugin: 'com.android.library'
} else {                                 // 模块作为 application 调试运行
    apply plugin: 'com.android.application'
}

apply plugin: 'kotlin-android'

// 视图绑定插件，可直接使用 XML 中的 id 操作该控件
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion 28



    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    //配置根据是否做为库文件使用，选用不同的 AndroidManifest 文件
    sourceSets {
        main {
            //作为库使用时 使用 release 文件下的 Manifest
            if (userCenterAsLibrary.toBoolean()) {
                manifest.srcFile 'src/main/release/AndroidManifest.xml'
                //release 模式下排除 debug 文件中的所有 java 文件
                java {
                    exclude 'debug/**'
                }
            } else {
                //单独调试运行的时候，使用 debug 模式
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            }
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation project(':Provider')

    kapt "com.google.dagger:dagger-compiler:$dagger_version"
}
repositories {
    mavenCentral()
}
