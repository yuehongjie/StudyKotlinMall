apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28



    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    api 'com.android.support:appcompat-v7:28.0.0'
    api 'com.android.support:recyclerview-v7:28.0.0'

    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //引入 Anko
    api ('org.jetbrains.anko:anko:' + rootProject.ext.anko_version) {
        exclude group: 'com.android.support'
    }

    // Rx & Retrofit
    api "io.reactivex:rxkotlin:$rx_kotlin_version"
    api "io.reactivex:rxandroid:$rx_android_version"
    api "com.squareup.retrofit2:retrofit:$retrofit_version"
    api "com.squareup.retrofit2:adapter-rxjava:$retrofit_version"
    api "com.squareup.retrofit2:converter-gson:$retrofit_version"
    api "com.squareup.okhttp3:okhttp:$ok_http_version"
    api "com.squareup.okhttp3:logging-interceptor:$ok_http_version"

    // dagger2 库文件只需要引入一次， compiler 是哪个 module 需要用就得配置
    api "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // glide4
    api 'com.github.bumptech.glide:glide:4.8.0'
    kapt 'com.github.bumptech.glide:compiler:4.8.0'


}


repositories {
    mavenCentral()
}
